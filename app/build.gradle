apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-parcelize'
apply plugin: 'kotlin-kapt'
apply plugin: "androidx.navigation.safeargs"
apply plugin: 'com.google.gms.google-services'
apply plugin: 'com.google.firebase.crashlytics'

def loadExtraProperties(String fileName) {
    def props = new Properties()
    props.load(new FileInputStream(fileName))
    props.each { key, val ->
       project.setProperty(key, val)
    }
}

loadExtraProperties("treetracker.keys.properties")

android {
    compileSdkVersion 30
    buildToolsVersion '30.0.3'


    defaultConfig {
        applicationId "org.greenstand.android.TreeTracker"
        minSdkVersion 21
        targetSdkVersion 30
        versionCode 124
        versionName "1.4.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
        buildConfigField "String", "OBJECT_STORAGE_IDENTITY_POOL_ID", "\"${s3_production_identity_pool_id}\""
        buildConfigField "String", "OBJECT_STORAGE_IDENTITY_REGION", '"eu-central-1"'
        buildConfigField 'String', 'OBJECT_STORAGE_ENDPOINT', '"eu-central-1"'
        buildConfigField 'String', 'OBJECT_STORAGE_BUCKET_IMAGES', '"treetracker-production-images"'
        buildConfigField 'String', 'OBJECT_STORAGE_BUCKET_BATCH_UPLOADS', '"treetracker-production-batch-uploads"'
        buildConfigField "String", "TREETRACKER_CLIENT_ID", "\"${treetracker_client_id}\""
        buildConfigField "String", "TREETRACKER_CLIENT_SECRET", "\"${treetracker_client_secret}\""
        buildConfigField 'Boolean', 'TREE_HEIGHT_FEATURE_ENABLED', "false"
        buildConfigField 'Boolean', 'TREE_NOTE_FEATURE_ENABLED', "true"
        buildConfigField 'Boolean', 'TREE_DBH_FEATURE_ENABLED', "false"
        buildConfigField 'Boolean', 'AUTOMATIC_SIGN_OUT_FEATURE_ENABLED', "true"
        buildConfigField 'Boolean', 'BLUR_DETECTION_ENABLED', "false"
        buildConfigField 'Boolean', 'USE_AWS_S3', "false"
        buildConfigField 'Boolean', 'ORG_LINK', "false"

        resValue "string", "maps_api_key", "\"${maps_api_key}\""

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = ["room.schemaLocation": "$projectDir/schemas".toString()]
            }
        }
    }

    buildFeatures {
        compose true
        viewBinding true
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }

    composeOptions {
        kotlinCompilerExtensionVersion compose_version
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    lintOptions {
        checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
    }

    buildTypes {
        release {
            minifyEnabled true
            resValue "string", "app_name", "Tree Tracker"
            buildConfigField "String", "OBJECT_STORAGE_IDENTITY_POOL_ID", "\"${s3_production_identity_pool_id}\""
            buildConfigField 'String', 'OBJECT_STORAGE_ENDPOINT', '"eu-central-1"'
            buildConfigField 'String', 'OBJECT_STORAGE_BUCKET_IMAGES', '"treetracker-production-images"'
            buildConfigField 'String', 'OBJECT_STORAGE_BUCKET_BATCH_UPLOADS', '"treetracker-production-batch-uploads"'
            buildConfigField 'Boolean', 'USE_AWS_S3', "true"
            buildConfigField 'Boolean', 'ENABLE_FABRIC', "true"
            buildConfigField 'Boolean', 'BLUR_DETECTION_ENABLED', "false"
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }


        prerelease {
            initWith(debug)
            applicationIdSuffix ".prerelease"
            buildConfigField "String", "OBJECT_STORAGE_IDENTITY_POOL_ID", "\"${s3_production_identity_pool_id}\""
            buildConfigField 'String', 'OBJECT_STORAGE_ENDPOINT', '"eu-central-1"'
            buildConfigField 'String', 'OBJECT_STORAGE_BUCKET_IMAGES', '"treetracker-production-images"'
            buildConfigField 'String', 'OBJECT_STORAGE_BUCKET_BATCH_UPLOADS', '"treetracker-production-batch-uploads"'
            buildConfigField 'Boolean', 'USE_AWS_S3', "true"
            buildConfigField 'Boolean', 'ENABLE_FABRIC', "true"
            buildConfigField 'Boolean', 'BLUR_DETECTION_ENABLED', "false"
            resValue "string", "app_name", "Tree Tracker Prerelease"
        }

        debug {
            applicationIdSuffix ".debug"
            resValue "string", "app_name", "Tree Tracker(debug)"
            buildConfigField "String", "OBJECT_STORAGE_IDENTITY_POOL_ID", "\"${s3_test_identity_pool_id}\""
            buildConfigField 'String', 'OBJECT_STORAGE_BUCKET_IMAGES', '"treetracker-test-images"'
            buildConfigField 'String', 'OBJECT_STORAGE_BUCKET_BATCH_UPLOADS', '"treetracker-test-batch-uploads"'
            buildConfigField 'Boolean', 'USE_AWS_S3', "true"
            buildConfigField 'Boolean', 'ENABLE_FABRIC', "true"
            buildConfigField 'Boolean', 'BLUR_DETECTION_ENABLED', "true"
        }

        beta {
            applicationIdSuffix ".test"
            resValue "string", "app_name", "Tree Tracker(test)"
            buildConfigField "String", "OBJECT_STORAGE_IDENTITY_POOL_ID", "\"${s3_test_identity_pool_id}\""
            buildConfigField 'String', 'OBJECT_STORAGE_BUCKET_IMAGES', '"treetracker-test-images"'
            buildConfigField 'String', 'OBJECT_STORAGE_BUCKET_BATCH_UPLOADS', '"treetracker-test-batch-uploads"'
            buildConfigField 'Boolean', 'USE_AWS_S3', "true"
            buildConfigField 'Boolean', 'ENABLE_FABRIC', "false"
            buildConfigField 'Boolean', 'BLUR_DETECTION_ENABLED', "false"
            signingConfig signingConfigs.debug
            debuggable true
        }

        dev {
            initWith(debug)
            applicationIdSuffix ".dev"
            resValue "string", "app_name", "Tree Tracker(dev)"
            buildConfigField 'String', 'OBJECT_STORAGE_BUCKET_IMAGES', '"treetracker-dev-images"'
            buildConfigField 'String', 'OBJECT_STORAGE_BUCKET_BATCH_UPLOADS', '"treetracker-dev-batch-uploads"'
            buildConfigField 'Boolean', 'ENABLE_FABRIC', "false"
            buildConfigField 'Boolean', 'BLUR_DETECTION_ENABLED', "true"
        }
    }

    flavorDimensions "version"
    productFlavors {
        greenstand {
            dimension "version"
        }

        organization {
            dimension "version"
            applicationIdSuffix ".organization"
            buildConfigField 'Boolean', 'ORG_LINK', "true"
        }

        justdiggit {
            dimension "version"
            applicationIdSuffix ".justdiggit"
            buildConfigField "Boolean", 'TREE_HEIGHT_FEATURE_ENABLED', "true"
            buildConfigField 'Boolean', 'TREE_NOTE_FEATURE_ENABLED', "false"
            buildConfigField 'Boolean', 'TREE_DBH_FEATURE_ENABLED', "true"
            buildConfigField 'Boolean', 'AUTOMATIC_SIGN_OUT_FEATURE_ENABLED', "false"
        }
    }

    useLibrary 'org.apache.http.legacy'

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/ASL2.0'
        exclude 'META-INF/io.netty.versions.properties'
        exclude 'META-INF/INDEX.LIST'

    }
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).configureEach {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

repositories {
    maven {
        url "https://maven.google.com"
    }
    maven { url 'https://maven.fabric.io/public' }
    mavenCentral()
}

dependencies {
    implementation 'com.google.android.material:material:1.3.0'
    implementation 'com.google.android.gms:play-services-maps:16.1.0'
    implementation 'com.google.maps.android:android-maps-utils:0.5+'

    //implementation 'com.amazonaws:aws-java-sdk:1.11.584'
    // 2.0: https://docs.aws.amazon.com/sdk-for-java/v2/developer-guide/setup-project-gradle.html
    // android s3 sdk does not support transfer acceleration
    implementation 'com.amazonaws:aws-android-sdk-core:2.16.8'
    implementation 'com.amazonaws:aws-android-sdk-s3:2.16.8'

    implementation 'org.koin:koin-android-viewmodel:2.0.0-GA'

    implementation 'androidx.appcompat:appcompat:1.3.1'
    implementation 'androidx.multidex:multidex:2.0.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    implementation 'androidx.exifinterface:exifinterface:1.3.2'
    implementation 'androidx.exifinterface:exifinterface:1.3.2'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.3.1'
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.3.1'
    implementation "androidx.work:work-runtime-ktx:2.5.0"

    // Compose
    implementation "androidx.compose.runtime:runtime:$compose_version"
    implementation "androidx.compose.runtime:runtime-livedata:$compose_version"
    implementation "androidx.compose.foundation:foundation:$compose_version"
    implementation "androidx.compose.foundation:foundation-layout:$compose_version"
    implementation "androidx.compose.ui:ui:$compose_version"
    implementation "androidx.compose.ui:ui-tooling:$compose_version"
    implementation "androidx.compose.material:material:$compose_version"
    implementation "androidx.compose.animation:animation:$compose_version"
    implementation "androidx.activity:activity-compose:1.3.0"
    implementation "androidx.navigation:navigation-compose:2.4.0-alpha01"


    // Navigation
    implementation 'androidx.navigation:navigation-fragment-ktx:2.3.5'
    implementation 'androidx.navigation:navigation-ui-ktx:2.3.5'
    implementation 'androidx.navigation:navigation-runtime:2.3.5'

    // Kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.5.0'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.5.0'

    //Database
    implementation 'androidx.room:room-runtime:2.3.0'
    implementation 'androidx.room:room-ktx:2.3.0'
    kapt "androidx.room:room-compiler:2.3.0"

    devImplementation 'com.amitshekhar.android:debug-db:1.0.6'

    api "com.squareup.retrofit2:converter-gson:${retrofit2Version}"

    // CameraX core library
    def camerax_version = "1.0.0"
    // CameraX view library
    def camerax_view_version = "1.0.0-alpha24"
    // CameraX extensions library
    def camerax_ext_version = "1.0.0-alpha24"
    implementation "androidx.camera:camera-core:$camerax_version"
    // If you want to use Camera2 extensions
    implementation "androidx.camera:camera-camera2:$camerax_version"
    // CameraX Lifecycle library
    implementation "androidx.camera:camera-lifecycle:$camerax_version"
    // If you to use the Camera View class
    implementation "androidx.camera:camera-view:$camerax_view_version"
    // If you to use Camera Extensions
    implementation "androidx.camera:camera-extensions:$camerax_ext_version"

    api 'com.jakewharton.timber:timber:4.7.1'
    implementation "androidx.legacy:legacy-support-v4:${androidSupportVersion}"

    implementation platform('com.google.firebase:firebase-bom:25.10.0')
    implementation 'com.google.firebase:firebase-analytics:18.0.2'
    implementation 'com.google.firebase:firebase-crashlytics-ktx:17.3.1'
    implementation 'com.google.firebase:firebase-auth-ktx:20.0.2'
    implementation 'com.google.firebase:firebase-iid:21.0.1'

    testImplementation "io.mockk:mockk:1.10.0"
    testImplementation "junit:junit:4.13.1"
    testImplementation "androidx.room:room-testing:2.2.6"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:1.3.9"
    testImplementation "androidx.arch.core:core-testing:2.1.0"
    androidTestImplementation "com.android.support.test:runner:1.0.2"
    androidTestImplementation "com.android.support.test.espresso:espresso-core:3.0.2"
}

configurations.all {
    resolutionStrategy {
        preferProjectModules()
        force 'com.google.code.gson:gson:2.8.5'
    }
}

apply plugin: 'com.google.gms.google-services'
